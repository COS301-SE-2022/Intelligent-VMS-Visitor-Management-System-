# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

type Visitor {
  id: Float!
  name: String!
  password: String!
}

type User {
  email: String!
  permission: Int!
}

type LoginUser {
  email: String
  access_token: String
}

type Restriction {
  name: String!
  value: Int!
}

type Parking {
  visitorEmail: String!
  parkingNumber: String!
  enabled: Boolean!
}

type Invite {
  userEmail: String!
  visitorEmail: String!
  visitorName: String!
  idDocType: String!
  idNumber: String!
  inviteID: String!
  inviteDate: String!
  requiresParking: Boolean!
  inviteState: String!
  notes: String!
  signOutTime: String!
  signInTime: String!
  trayNumber: Float!
}

type ParkingReservation {
  invitationID: String!
  parkingNumber: String!
  inviteData: [Invite!]!
}

type SearchInvite {
  visitorEmail: String!
  visitorName: String!
}

input VisitorInputType {
  id: Float!
  name: String!
  password: String!
}

input UserInputType {
  email: String
  access_token: String
}

type Query {
  hello: String!
  visitors: [Visitor!]!
  helloUser: String!
  getUnauthorizedUsers: [User!]!
  helloInvite: String!
  getInvites: [Invite!]!
  getTotalNumberOfVisitors: Float!
  getNumInvitesPerDate(dateStart: String!, dateEnd: String!): [Invite!]!
  getNumInvitesPerDateOfUser(dateStart: String!, dateEnd: String!, email: String!): [Invite!]!
  getTotalNumberOfInvitesOfResident(email: String!): Float!
  getInvitesByName(name: String!): [SearchInvite!]!
  getInvitesByNameForSearch(name: String!): [Invite!]!
  getInvitesByIDForSearch(inviteID: String!): Invite!
  getNumberOfInvitesOfVisitor(email: String!): Float!
  getInvitesByDate(date: String!): [Invite!]!
  helloParking: String!
  getAvailableParking: Float!
  getFreeParking: Parking!
  getReservations: ParkingReservation!
  getUsedParkingsInRange(startDate: String!, endDate: String!): [Float!]!
  getNumInvitesPerResident: Restriction!
  helloResident: String!
  helloReceptionist: String!
}

type Mutation {
  createVisitor(input: VisitorInputType!): Visitor!
  login(email: String!, password: String!): LoginUser!
  signup(email: String!, password: String!, type: String!, idNumber: String!): String!
  verify(verifyID: String!, email: String!): Boolean!
  createInvite(userEmail: String!, visitorName: String!, visitorEmail: String!, IDDocType: String!, IDNumber: String!, inviteDate: String!, requiresParking: Boolean!): String!
  cancelInvite(inviteID: String!): Boolean!
  assignParking(invitationID: String!): Parking!
  reserveParkingSpace(invitationID: String!, parkingNumber: Float!): ParkingReservation!
  reserveParking(invitationID: String!): ParkingReservation!
  unreservedParking(invitationID: String!): Boolean!
  freeParking(parkingNumber: Float!): Parking!
  ceatedParkings(N: Float!): Boolean!
  setNumInvitesPerResident(numInvites: Float!): Restriction!
  signOut(inviteID: String!): Float!
  signIn(inviteID: String!, notes: String!, time: String!): Float!
}